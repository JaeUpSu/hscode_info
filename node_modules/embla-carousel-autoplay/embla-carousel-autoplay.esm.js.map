{"version":3,"file":"embla-carousel-autoplay.esm.js","sources":["src/components/Options.ts","src/components/index.ts"],"sourcesContent":["import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  delay: number\n  jump: boolean\n  playOnInit: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  stopOnLastSnap: boolean\n  rootNode: ((emblaRoot: HTMLElement) => HTMLElement | null) | null\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null,\n}\n\nexport type AutoplayOptionsType = Partial<OptionsType>\n","import { AutoplayOptionsType, defaultOptions, OptionsType } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport EmblaCarousel, { EmblaCarouselType } from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoplay?: AutoplayType\n  }\n}\n\nexport type AutoplayType = CreatePluginType<\n  {\n    play: (jump?: boolean) => void\n    stop: () => void\n    reset: () => void\n  },\n  OptionsType\n>\n\nfunction Autoplay(userOptions?: AutoplayOptionsType): AutoplayType {\n  const optionsHandler = EmblaCarousel.optionsHandler()\n  const optionsBase = optionsHandler.merge(\n    defaultOptions,\n    Autoplay.globalOptions,\n  )\n  let options: AutoplayType['options']\n  let carousel: EmblaCarouselType\n  let interaction: () => void\n  let timer = 0\n  let jump = false\n\n  function init(embla: EmblaCarouselType): void {\n    carousel = embla\n    options = optionsHandler.atMedia(self.options)\n    jump = options.jump\n    interaction = options.stopOnInteraction ? destroy : stop\n    const { eventStore } = carousel.internalEngine()\n    const emblaRoot = carousel.rootNode()\n    const root = (options.rootNode && options.rootNode(emblaRoot)) || emblaRoot\n\n    carousel.on('pointerDown', interaction)\n    if (!options.stopOnInteraction) carousel.on('pointerUp', reset)\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', interaction)\n      if (!options.stopOnInteraction) eventStore.add(root, 'mouseleave', reset)\n    }\n\n    eventStore.add(document, 'visibilitychange', () => {\n      if (document.visibilityState === 'hidden') return stop()\n      reset()\n    })\n    eventStore.add(window, 'pagehide', (event: PageTransitionEvent) => {\n      if (event.persisted) stop()\n    })\n\n    if (options.playOnInit) play()\n  }\n\n  function destroy(): void {\n    carousel.off('pointerDown', interaction)\n    if (!options.stopOnInteraction) carousel.off('pointerUp', reset)\n    stop()\n    timer = 0\n  }\n\n  function play(jumpOverride?: boolean): void {\n    stop()\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride\n    timer = window.setTimeout(next, options.delay)\n  }\n\n  function stop(): void {\n    if (!timer) return\n    window.clearTimeout(timer)\n  }\n\n  function reset(): void {\n    if (!timer) return\n    stop()\n    play()\n  }\n\n  function next(): void {\n    const { index } = carousel.internalEngine()\n    const kill = options.stopOnLastSnap && index.get() === index.max\n\n    if (kill) return destroy()\n\n    if (carousel.canScrollNext()) {\n      carousel.scrollNext(jump)\n    } else {\n      carousel.scrollTo(0, jump)\n    }\n    play()\n  }\n\n  const self: AutoplayType = {\n    name: 'autoplay',\n    options: optionsHandler.merge(optionsBase, userOptions),\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n  }\n  return self\n}\n\nAutoplay.globalOptions = <AutoplayOptionsType | undefined>undefined\n\nexport default Autoplay\n"],"names":["defaultOptions","active","breakpoints","delay","jump","playOnInit","stopOnInteraction","stopOnMouseEnter","stopOnLastSnap","rootNode","Autoplay","userOptions","optionsHandler","EmblaCarousel","optionsBase","merge","globalOptions","options","carousel","interaction","timer","init","embla","atMedia","self","destroy","stop","eventStore","internalEngine","emblaRoot","root","on","reset","add","document","visibilityState","window","event","persisted","play","off","jumpOverride","setTimeout","next","clearTimeout","index","kill","get","max","canScrollNext","scrollNext","scrollTo","name","undefined"],"mappings":"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"}