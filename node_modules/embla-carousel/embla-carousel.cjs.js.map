{"version":3,"file":"embla-carousel.cjs.js","sources":["src/components/utils.ts","src/components/Alignment.ts","src/components/Animation.ts","src/components/Axis.ts","src/components/Limit.ts","src/components/Counter.ts","src/components/Direction.ts","src/components/EventStore.ts","src/components/Vector1d.ts","src/components/DragHandler.ts","src/components/DragTracker.ts","src/components/PercentOfView.ts","src/components/ScrollBody.ts","src/components/ScrollBounds.ts","src/components/ScrollContain.ts","src/components/ScrollLimit.ts","src/components/ScrollLooper.ts","src/components/ScrollProgress.ts","src/components/ScrollSnaps.ts","src/components/ScrollTarget.ts","src/components/ScrollTo.ts","src/components/Translate.ts","src/components/SlideLooper.ts","src/components/SlidesInView.ts","src/components/SlideSizes.ts","src/components/SlidesToScroll.ts","src/components/Engine.ts","src/components/EventHandler.ts","src/components/Options.ts","src/components/OptionsHandler.ts","src/components/PluginsHandler.ts","src/components/index.ts"],"sourcesContent":["export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isArray(subject: unknown): subject is Record<number, unknown> {\n  return Array.isArray(subject)\n}\n\nexport function isRecord(\n  subject: unknown,\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || isArray(subject)\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / mathAbs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function objectKeys<Type>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function objectsAreEqual(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): boolean {\n  const objectAKeys = objectKeys(objectA)\n  const objectBKeys = objectKeys(objectB)\n\n  if (objectAKeys.length !== objectBKeys.length) return false\n\n  return objectAKeys.every((key) => {\n    const valueA = objectA[key]\n    const valueB = objectB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return objectsAreEqual(valueA, valueB)\n  })\n}\n","import { isNumber } from './utils'\n\nexport type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (isNumber(align)) return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply,\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true },\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => node.removeEventListener(type, handler, options))\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathAbs, mathSign } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  loop: boolean,\n  dragFree: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const dragThreshold = percentOfView.measure(20)\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function addInteractionEvents(): void {\n    const node = isMouse ? document : rootNode\n    interactionEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.4\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    isMouse = !dragTracker.isTouchEvent(evt)\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n  }\n\n  function move(evt: PointerEventType): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      const lastScroll = dragTracker.readPoint(evt)\n      const lastCross = dragTracker.readPoint(evt, crossAxis)\n      const diffScroll = deltaAbs(lastScroll, startScroll)\n      const diffCross = deltaAbs(lastCross, startCross)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = mathAbs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  // DEPRECATED - Remove in v8 because handled automatically\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { mathAbs } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  isTouchEvent: (evt: PointerEventType) => evt is TouchEvent\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(axis: AxisType): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function isTouchEvent(evt: PointerEventType): evt is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent\n  }\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    isTouchEvent,\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (target: Vector1DType) => ScrollBodyType\n  settle: (target: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(force: Vector1DType): void {\n    force.divide(mass)\n    acceleration.add(force)\n  }\n\n  function seek(target: Vector1DType): ScrollBodyType {\n    attraction.set(target).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(target: Vector1DType): boolean {\n    const diff = target.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(target)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType,\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const maxFriction = 0.85\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollType,\n  containScroll: boolean,\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const containedStartSnap = 0\n    const containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps)\n\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index, groupedSnaps) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(groupedSnaps)\n        if (containScroll && isFirst) return containedStartSnap\n        if (containScroll && isLast) return containedEndSnap\n        return snap + alignments[index]\n      })\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    return minDistance(matchingTargets)\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  index: number\n  translate: TranslateType\n  location: Vector1DType\n  target: () => Vector1DType\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scroll: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds([offset])\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const shift = Vector1D(-1)\n      const location = Vector1D(-1)\n      const translate = Translate(axis, direction, slides[index])\n      const target = () => shift.set(scroll.get() > point ? initial : altered)\n      return { index, location, translate, target }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, location } = loopPoint\n      const shift = target()\n      if (shift.get() === location.get()) return\n      if (shift.get() === 0) translate.clear()\n      else translate.to(shift)\n      location.set(shift)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\n\nexport type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number, bounds?: SlideBoundType[]) => number[]\n  findSlideBounds: (offsets?: number[], threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  limit: LimitType,\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const { removeOffset, constrain } = limit\n  const roundingSafety = 0.5\n  const cachedOffsets = loop ? [0, contentSize, -contentSize] : [0]\n  const cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold)\n\n  function findSlideThresholds(threshold?: number): number[] {\n    const slideThreshold = threshold || 0\n\n    return slideSizes.map((slideSize) => {\n      const thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety)\n      return thresholdLimit.constrain(slideSize * slideThreshold)\n    })\n  }\n\n  function findSlideBounds(\n    offsets?: number[],\n    threshold?: number,\n  ): SlideBoundType[] {\n    const slideOffsets = offsets || cachedOffsets\n    const slideThresholds = findSlideThresholds(threshold)\n\n    return slideOffsets.reduce((list: SlideBoundType[], offset) => {\n      const bounds = snaps.map((snap, index) => ({\n        start: snap - slideSizes[index] + slideThresholds[index] + offset,\n        end: snap + viewSize - slideThresholds[index] + offset,\n        index,\n      }))\n      return list.concat(bounds)\n    }, [])\n  }\n\n  function check(location: number, bounds?: SlideBoundType[]): number[] {\n    const limitedLocation = loop ? removeOffset(location) : constrain(location)\n    const slideBounds = bounds || cachedBounds\n\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < limitedLocation && end > limitedLocation\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = window.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(rects)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { arrayKeys, arrayLast, isNumber } from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  viewSize: number,\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollOptionType,\n): SlidesToScrollType {\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    return arrayKeys(array)\n      .reduce((groupSizes: number[], i) => {\n        const chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1)\n        const chunkSize = chunk.reduce((a, s) => a + s, 0)\n        return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes\n      }, [])\n      .map((start, i, groupSizes) => array.slice(start, groupSizes[i + 1]))\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  containerRect: DOMRect\n  slideRects: DOMRect[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  eventHandler: EventHandlerType,\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && containScroll !== ''\n  const readEdgeGap = loop || containScroll !== ''\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n  )\n  const slidesToScroll = SlidesToScroll(\n    viewSize,\n    slideSizesWithGaps,\n    groupSlides,\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slideSizesWithGaps,\n    slidesToScroll,\n    containSnaps,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!settled) {\n      eventHandler.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    limit,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    DragTracker(axis),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    eventHandler,\n    percentOfView,\n    loop,\n    dragFree,\n    skipSnaps,\n  )\n\n  // Engine\n  const engine: EngineType = {\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    eventStore: EventStore(),\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView,\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesToScroll,\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventHandlerType = {\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  draggable: boolean\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  speed: number\n  startIndex: number\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsAreEqual, objectsMergeDeep } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  merge: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ) => TypeA\n  areEqual: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ) => boolean\n  atMedia: <Type extends OptionsType>(options: Type) => Type\n}\n\nexport function OptionsHandler(): OptionsHandlerType {\n  function merge<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function areEqual<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ): boolean {\n    const breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}))\n    const breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}))\n    if (breakpointsA !== breakpointsB) return false\n    return objectsAreEqual(optionsA, optionsB)\n  }\n\n  function atMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => window.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => merge(a, mediaOption), {})\n\n    return merge(options, matchedMediaOptions)\n  }\n\n  const self: OptionsHandlerType = {\n    merge,\n    areEqual,\n    atMedia,\n  }\n  return self\n}\n","import { EmblaCarouselType } from '.'\nimport { OptionsHandler } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\ntype PluginChangedHandlerType = () => boolean\n\nexport type PluginsHandlerType = {\n  init: (\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ) => EmblaPluginsType\n  destroy: () => void\n  haveChanged: PluginChangedHandlerType\n}\n\nexport function PluginsHandler(): PluginsHandlerType {\n  const { atMedia, areEqual } = OptionsHandler()\n  let activePlugins: EmblaPluginType[] = []\n  let pluginsChanged: PluginChangedHandlerType[] = []\n\n  function haveChanged(): boolean {\n    return pluginsChanged.some((hasChanged) => hasChanged())\n  }\n\n  function hasChanged(plugin: EmblaPluginType): PluginChangedHandlerType {\n    const options = atMedia(plugin.options)\n    return (): boolean => !areEqual(options, atMedia(plugin.options))\n  }\n\n  function init(\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ): EmblaPluginsType {\n    pluginsChanged = plugins.map(hasChanged)\n    activePlugins = plugins.filter((plugin) => atMedia(plugin.options).active)\n    activePlugins.forEach((plugin) => plugin.init(embla))\n\n    return plugins.reduce((map, plugin) => {\n      return Object.assign(map, { [plugin.name]: plugin })\n    }, {})\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy,\n    haveChanged,\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type EmblaNodesType = {\n  root: HTMLElement\n  container?: HTMLElement\n  slides?: HTMLElement[]\n}\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  nodes: HTMLElement | EmblaNodesType,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[],\n): EmblaCarouselType {\n  const resizeHandlers = EventStore()\n  const optionsHandler = OptionsHandler()\n  const pluginsHandler = PluginsHandler()\n  const eventHandler = EventHandler()\n  const { on, off } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = optionsHandler.merge(\n    defaultOptions,\n    EmblaCarousel.globalOptions,\n  )\n  let options = optionsHandler.merge(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n  let rootSize = 0\n  let root: HTMLElement\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const providedContainer = 'container' in nodes && nodes.container\n    const providedSlides = 'slides' in nodes && nodes.slides\n\n    root = 'root' in nodes ? nodes.root : nodes\n    container = providedContainer || <HTMLElement>root.children[0]\n    slides = providedSlides || [].slice.call(container.children)\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    if (destroyed) return\n    storeElements()\n\n    optionsBase = optionsHandler.merge(optionsBase, withOptions)\n    options = optionsHandler.atMedia(optionsBase)\n    engine = Engine(root, container, slides, options, eventHandler)\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect())\n\n    if (!options.active) return deActivate()\n\n    engine.translate.to(engine.location)\n    pluginList = withPlugins || pluginList\n    pluginApis = pluginsHandler.init(pluginList, self)\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        activate({ loop: false }, withPlugins)\n        optionsBase = optionsHandler.merge(optionsBase, { loop: true })\n        return\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n    }\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(optionsHandler.merge({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.animation.stop()\n    engine.eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    pluginsHandler.destroy()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    resizeHandlers.removeAll()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function resize(): void {\n    const newOptions = optionsHandler.atMedia(optionsBase)\n    const optionsChanged = !optionsHandler.areEqual(newOptions, options)\n    const newRootSize = engine.axis.measureSize(root.getBoundingClientRect())\n    const rootSizeChanged = rootSize !== newRootSize\n    const pluginsChanged = pluginsHandler.haveChanged()\n\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate()\n    eventHandler.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n\n  activate(userOptions, userPlugins)\n  resizeHandlers.add(window, 'resize', resize)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\nEmblaCarousel.optionsHandler = OptionsHandler\n\nexport default EmblaCarousel\n"],"names":["map","value","iStart","iStop","oStart","oStop","isNumber","subject","isObject","Object","prototype","toString","call","isArray","Array","isRecord","mathAbs","n","Math","abs","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","length","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","objectsAreEqual","objectAKeys","objectBKeys","every","concat","Alignment","align","viewSize","predefined","start","center","end","percent","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","sign","apply","EventStore","listeners","node","type","handler","options","passive","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","eventHandler","percentOfView","dragFree","skipSnaps","crossAxis","focusNodes","nonPassiveEvent","dragStartPoint","activationEvents","interactionEvents","dragThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","evt","preventDefault","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","isTouchEvent","button","isMoving","clearPreventClick","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","lastScroll","lastCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","stopPropagation","clickAllowed","DragTracker","logInterval","startEvent","lastEvent","TouchEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","PercentOfView","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","maxFriction","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","friction","toggleActive","ScrollContain","contentSize","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","slice","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","scrollLength","ScrollSnaps","alignment","containerRect","slideRects","slideSizesWithGaps","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","snap","containedStartSnap","containedEndSnap","g","groupedSnaps","isFirst","isLast","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","i","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","Translate","container","translate","x","y","containerStyle","style","to","transform","clear","getAttribute","removeAttribute","SlideLooper","slidesInView","slides","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","from","slidesInGap","gap","remainingGap","findLoopPoints","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","point","shift","canLoop","otherIndexes","loopPoint","SlidesInView","slideSizes","inViewThreshold","roundingSafety","cachedOffsets","cachedBounds","findSlideThresholds","threshold","slideThreshold","slideSize","thresholdLimit","offsets","slideOffsets","slideThresholds","list","check","limitedLocation","slideBound","inList","inView","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","parseFloat","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","groupSizes","chunk","chunkSize","s","Engine","root","scrollAxis","contentDirection","startIndex","getBoundingClientRect","slide","containSnaps","_b","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","eventStore","scrollProgress","EventHandler","getListeners","e","on","off","defaultOptions","breakpoints","draggable","OptionsHandler","merge","optionsA","optionsB","areEqual","breakpointsA","JSON","stringify","breakpointsB","atMedia","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","PluginsHandler","activePlugins","pluginsChanged","haveChanged","some","hasChanged","plugin","init","plugins","embla","assign","destroy","EmblaCarousel","nodes","userOptions","userPlugins","resizeHandlers","optionsHandler","pluginsHandler","reInit","reActivate","destroyed","optionsBase","globalOptions","pluginList","pluginApis","rootSize","storeElements","providedContainer","providedSlides","children","activate","withOptions","withPlugins","deActivate","offsetParent","selectedScrollSnap","resize","newOptions","optionsChanged","newRootSize","rootSizeChanged","slidesNotInView","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","internalEngine","containerNode","slideNodes","setTimeout"],"mappings":"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"}